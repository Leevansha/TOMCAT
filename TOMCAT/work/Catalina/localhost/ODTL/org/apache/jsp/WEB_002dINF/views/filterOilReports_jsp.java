/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.11
 * Generated at: 2018-10-11 07:21:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class filterOilReports_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("file:/C:/SERVERS/TOMCAT/lib/spring5hibernate5/spring-webmvc-5.0.0.RELEASE.jar", Long.valueOf(1519102724000L));
    _jspx_dependants.put("file:/C:/SERVERS/TOMCAT/lib/spring5hibernate5/spring-security-taglibs-5.0.0.RELEASE.jar", Long.valueOf(1514528160000L));
    _jspx_dependants.put("/WEB-INF/views/locationFilterView.jsp", Long.valueOf(1539241803000L));
    _jspx_dependants.put("file:/C:/SERVERS/TOMCAT/lib/spring5hibernate5/jstl-impl-1.2.jar", Long.valueOf(1519102722000L));
    _jspx_dependants.put("jar:file:/C:/SERVERS/TOMCAT/lib/spring5hibernate5/jstl-impl-1.2.jar!/META-INF/c.tld", Long.valueOf(1308107170000L));
    _jspx_dependants.put("jar:file:/C:/SERVERS/TOMCAT/lib/spring5hibernate5/spring-security-taglibs-5.0.0.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1511793172000L));
    _jspx_dependants.put("jar:file:/C:/SERVERS/TOMCAT/lib/spring5hibernate5/spring-webmvc-5.0.0.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1506576796000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$('div .checkbox').click(function() {\n");
      out.write("\t\tcheckedState = $(this).attr('checked');\n");
      out.write("\t\t$(this).parent('div').children('.checkbox:checked').each(function() {\n");
      out.write("\t\t\t$(this).attr('checked', false);\n");
      out.write("\t\t});\n");
      out.write("\t\t$(this).attr('checked', checkedState);\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$('.date-picker').datepicker({\n");
      out.write("\t\t\tyearRange : '2018:2100',\n");
      out.write("\t\t\tchangeMonth : true,\n");
      out.write("\t\t\tchangeYear : true,\n");
      out.write("\t\t\tshowButtonPanel : false,\n");
      out.write("\t\t\tdateFormat : \"mm/yy\"\n");
      out.write("\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tfunction applyFilters() {\n");
      out.write("\t\t$('body').css('display', 'none');\n");
      out.write("\n");
      out.write("\t\t//\tvar filterModel = {};\n");
      out.write("\t\t//filterModel.selectedCircle =[{circleCode: $(\"#circleDD\").val()}];\n");
      out.write("\t\t//filterModel.selectedCircle = $(\"#circleDD\").val();\n");
      out.write("\t\t//filterModel.selectedDivision = $(\"#divisionDD\").val();\n");
      out.write("\t\t//filterModel.selectedSubstation = $(\"#substationDD\").val();\n");
      out.write("\n");
      out.write("\t\tvar circleSelected = $(\"#circleDD\").val();\n");
      out.write("\t\tvar divisionSelected = $(\"#divisionDD\").val();\n");
      out.write("\t\tvar substationSelected = $(\"#substationDD\").val();\n");
      out.write("\t\tvar sampleNo = $(\"#sampleNo\").val();\n");
      out.write("\t\tvar reportDate = $(\"#reportDate\").val();\n");
      out.write("\n");
      out.write("\t\tvar month = $(\"#month\").val();\n");
      out.write("\t\tvar year = $(\"#year\").val();\n");
      out.write("\n");
      out.write("\t\tvar finalReport = $(\"#finalReport\").prop('checked');\n");
      out.write("\t\tvar aeeApproval = $(\"#aeeApproval\").prop('checked');\n");
      out.write("\t\tvar rejectedReport = $(\"#rejectedReport\").prop('checked');\n");
      out.write("\n");
      out.write("\t\t// \t\t$.post(\"/ODTL/filterEquipmentOBJ\",{filterModel1:filterModel},populateTableContainer)\n");
      out.write("\t\t// \t\t\t\t.done(function() {})\n");
      out.write("\t\t// \t\t\t\t.fail(function(data, status, er) {alert(\"Couldn't load location information !\" + data + er);});\n");
      out.write("\t\t// \t\t\t}\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl : \"/ODTL/filterOilReport\",\n");
      out.write("\t\t\ttype : \"POST\",\n");
      out.write("\t\t\tdata : {\n");
      out.write("\t\t\t\tcircleSelected : circleSelected,\n");
      out.write("\t\t\t\tdivisionSelected : divisionSelected,\n");
      out.write("\t\t\t\tsubstationSelected : substationSelected,\n");
      out.write("\n");
      out.write("\t\t\t\tsampleNo : sampleNo,\n");
      out.write("\t\t\t\treportDateStart : reportDate,\n");
      out.write("\t\t\t\treportDateEnd : reportDate,\n");
      out.write("\t\t\t\tmonth : month,\n");
      out.write("\t\t\t\tyear : year,\n");
      out.write("\t\t\t\tfinalReport : finalReport,\n");
      out.write("\t\t\t\taeeApproval : aeeApproval,\n");
      out.write("\t\t\t\trejectedReport : rejectedReport\n");
      out.write("\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tsuccess : function(response) {\n");
      out.write("\t\t\t\t$(\"#tableContainer\").replaceWith(response);\n");
      out.write("\t\t\t\t$('body').css('display', 'block');\n");
      out.write("\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\terror : function(data, status, er) {\n");
      out.write("\t\t\t\talert(\"Error\" + data + er);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t\t// \t\t$.ajax({\n");
      out.write("\t\t// \t\t\turl : \"/ODTL/filterEquipmentOBJ\",\n");
      out.write("\t\t// \t\t\ttype : \"POST\",\n");
      out.write("\t\t// \t\t\tcontentType : \"application/json\",\n");
      out.write("\t\t// \t\t\tdata : JSON.stringify({\n");
      out.write("\t\t// \t\t\t\tfilterModel : filterModel\n");
      out.write("\t\t// \t\t\t}),\n");
      out.write("\t\t// \t\t\tsuccess : function(response) {\n");
      out.write("\t\t// \t\t\t\t$(\"#tableContainer\").replaceWith(response);\n");
      out.write("\t\t// \t\t\t},\n");
      out.write("\t\t// \t\t\terror : function(data, status, er) {\n");
      out.write("\t\t// \t\t\t\talert(\"Error\" + data + er);\n");
      out.write("\t\t// \t\t\t}\n");
      out.write("\t\t// \t\t});\n");
      out.write("\n");
      out.write("\t\t//).fail(function(data, status, er) {alert(\"Couldn't load location information !\" + data + er);}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction populateTableContainer(data, status) {\n");
      out.write("\t\t$(\"#tableContainer\").replaceWith(data);\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t\tfunction submitform() {\n");
      out.write("\t\t\t$('#circleDD').find('option').remove().end();\n");
      out.write("\t\t\t$('#divisionDD').find('option').remove().end();\n");
      out.write("\t\t\t$('#substationDD').find('option').remove().end();\n");
      out.write("\t\t\t$.post(\"/ODTL/getLocationsModel\", {\n");
      out.write("\t\t\t\tcircleSelected : $(\"#circleDD\").val(),\n");
      out.write("\t\t\t\tdivisionSelected : $(\"#divisionDD\").val(),\n");
      out.write("\t\t\t\tsubstationSelected : $(\"#substationDD\").val()\n");
      out.write("\t\t\t}, populate).done(function() {\n");
      out.write("\t\t\t\t//alert( \"Employee Added\" );\n");
      out.write("\t\t\t}).fail(function(data, status, er) {\n");
      out.write("\t\t\t\talert(\"Couldn't load location information !\" + data + er);\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction addEmpty()\n");
      out.write("\t\t{\n");
      out.write("\t\t\taddEmptyCircle();\n");
      out.write("\t\t\taddEmptyDivision();\n");
      out.write("\t\t\taddEmptySubstation();\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction addEmptyCircle()\n");
      out.write("\t\t{\n");
      out.write("\t\t$('#circleDD').append(\n");
      out.write("\t\t\t\t$(\"<option></option>\").attr(\"value\", \"\")\n");
      out.write("\t\t\t\t\t\t.text(\"Select Circle\"));\n");
      out.write("\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction addEmptyDivision()\n");
      out.write("\t\t{\n");
      out.write("\t\t\n");
      out.write("\t\t$('#divisionDD').append(\n");
      out.write("\t\t\t\t$(\"<option></option>\").attr(\"value\", \"\")\n");
      out.write("\t\t\t\t\t\t.text(\"Select Division\"));\n");
      out.write("\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction addEmptySubstation()\n");
      out.write("\t\t{\n");
      out.write("\t\t\n");
      out.write("\t\t$('#substationDD').append(\n");
      out.write("\t\t\t\t$(\"<option></option>\")\n");
      out.write("\t\t\t\t\t\t.attr(\"value\", \"\").text(\n");
      out.write("\t\t\t\t\t\t\t\t\"Select Sub-Station\"));\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction populate(data, status) {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\taddEmpty();\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t$.each(data.circleList, function(idx, obj) {\n");
      out.write("\t\t\t\t//alert(obj.circleDescription);\n");
      out.write("\t\t\t\t$('#circleDD').append(\n");
      out.write("\t\t\t\t\t\t$(\"<option></option>\").attr(\"value\", obj.circleCode)\n");
      out.write("\t\t\t\t\t\t\t\t.text(obj.circleDescription));\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$.each(data.divisionList, function(idx, obj) {\n");
      out.write("\t\t\t\t//alert(obj.divisionDescription);\n");
      out.write("\t\t\t\t$('#divisionDD').append(\n");
      out.write("\t\t\t\t\t\t$(\"<option></option>\").attr(\"value\", obj.divisionCode)\n");
      out.write("\t\t\t\t\t\t\t\t.text(obj.divisionDescription));\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$.each(data.substationList, function(idx, obj) {\n");
      out.write("\t\t\t\t//alert(obj.substationDescription);\n");
      out.write("\t\t\t\t$('#substationDD').append(\n");
      out.write("\t\t\t\t\t\t$(\"<option></option>\")\n");
      out.write("\t\t\t\t\t\t\t\t.attr(\"value\", obj.substationCode).text(\n");
      out.write("\t\t\t\t\t\t\t\t\t\tobj.substationDescription));\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tfunction submitCircle() {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#divisionDD').find('option').remove().end();\n");
      out.write("\t\t\t$('#substationDD').find('option').remove().end();\n");
      out.write("\t\t\t$.post(\"/ODTL/getLocationsModel\", {\n");
      out.write("\t\t\t\tcircleSelected : $(\"#circleDD\").val(),\n");
      out.write("\t\t\t\tdivisionSelected : null,\n");
      out.write("\t\t\t\tsubstationSelected : null\n");
      out.write("\t\t\t}, circleSelected).done(function() {\n");
      out.write("\t\t\t\t//alert( \"Employee Added\" );\n");
      out.write("\t\t\t}).fail(function(data, status, er) {\n");
      out.write("\t\t\t\talert(\"Couldn't load location information !\" + data + er);\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction circleSelected(data, status) {\n");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\taddEmptyDivision();\n");
      out.write("\t\t\taddEmptySubstation();\n");
      out.write("\t\t\t$.each(data.divisionList, function(idx, obj) {\n");
      out.write("\t\t\t\t//alert(obj.divisionDescription);\n");
      out.write("\t\t\t\t$('#divisionDD').append(\n");
      out.write("\t\t\t\t\t\t$(\"<option></option>\").attr(\"value\", obj.divisionCode)\n");
      out.write("\t\t\t\t\t\t\t\t.text(obj.divisionDescription));\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$.each(data.substationList, function(idx, obj) {\n");
      out.write("\t\t\t\t//alert(obj.substationDescription);\n");
      out.write("\t\t\t\t$('#substationDD').append(\n");
      out.write("\t\t\t\t\t\t$(\"<option></option>\")\n");
      out.write("\t\t\t\t\t\t\t\t.attr(\"value\", obj.substationCode).text(\n");
      out.write("\t\t\t\t\t\t\t\t\t\tobj.substationDescription));\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction submitDivision() {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#substationDD').find('option').remove().end();\n");
      out.write("\t\t\t$.post(\"/ODTL/getLocationsModel\", {\n");
      out.write("\t\t\t\tcircleSelected : $(\"#circleDD\").val(),\n");
      out.write("\t\t\t\tdivisionSelected : $(\"#divisionDD\").val(),\n");
      out.write("\t\t\t\tsubstationSelected : null\n");
      out.write("\t\t\t}, divSelected).done(function() {\n");
      out.write("\t\t\t\t//alert( \"Employee Added\" );\n");
      out.write("\t\t\t}).fail(function(data, status, er) {\n");
      out.write("\t\t\t\talert(\"Couldn't load location information !\" + data + er);\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction divSelected(data, status) {\n");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\taddEmptySubstation();\n");
      out.write("\t\t\t$.each(data.substationList, function(idx, obj) {\n");
      out.write("\t\t\t\t//alert(obj.substationDescription);\n");
      out.write("\t\t\t\t$('#substationDD').append(\n");
      out.write("\t\t\t\t\t\t$(\"<option></option>\")\n");
      out.write("\t\t\t\t\t\t\t\t.attr(\"value\", obj.substationCode).text(\n");
      out.write("\t\t\t\t\t\t\t\t\t\tobj.substationDescription));\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction submitSS() {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.post(\"/ODTL/getLocationsModel\", {\n");
      out.write("\t\t\t\tcircleSelected : $(\"#circleDD\").val(),\n");
      out.write("\t\t\t\tdivisionSelected : $(\"#divisionDD\").val(),\n");
      out.write("\t\t\t\tsubstationSelected : $(\"#substationDD\").val()\n");
      out.write("\t\t\t}, ssSelected).done(function() {\n");
      out.write("\t\t\t\t//alert( \"Employee Added\" );\n");
      out.write("\t\t\t}).fail(function(data, status, er) {\n");
      out.write("\t\t\t\talert(\"Couldn't load location information !\" + data + er);\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction ssSelected(data, status) {\n");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("<script>\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\t\t\tsubmitform();\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"form-control col-md-4\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tCircle <select id=\"circleDD\" class=\"form-control input-sm\"\n");
      out.write("\t\tonchange=\"submitCircle()\">\n");
      out.write("\n");
      out.write("\t</select>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"form-control col-md-4\">\n");
      out.write("\n");
      out.write("\tDivision <select id=\"divisionDD\" class=\"form-control input-sm\"\n");
      out.write("\t\tonchange=\"submitDivision()\">\n");
      out.write("\t</select>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"form-control col-md-4\">\n");
      out.write("\n");
      out.write("\tSubstation <select id=\"substationDD\" class=\"form-control input-sm\"\n");
      out.write("\t\tonchange=\"submitSS()\">\n");
      out.write("\t</select>\n");
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"form-control col-md-4\">\n");
      out.write("\t\t\tReport Date <input type=\"text\" class=\"date-picker\" id=\"reportDate\"\n");
      out.write("\t\t\t\tclass=\"form-control input-sm\" />\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"form-control col-md-4\">\n");
      out.write("\t\t\tMonth <select id=\"month\">\n");
      out.write("\t\t\t\t<option value=\"\">All Months</option>\n");
      out.write("\t\t\t\t<option value=\"1\">Jan</option>\n");
      out.write("\t\t\t\t<option value=\"2\">Feb</option>\n");
      out.write("\t\t\t\t<option value=\"3\">March</option>\n");
      out.write("\t\t\t\t<option value=\"4\">April</option>\n");
      out.write("\t\t\t\t<option value=\"5\">May</option>\n");
      out.write("\t\t\t\t<option value=\"6\">June</option>\n");
      out.write("\t\t\t\t<option value=\"7\">July</option>\n");
      out.write("\t\t\t\t<option value=\"8\">Aug</option>\n");
      out.write("\t\t\t\t<option value=\"9\" selected=\"selected\">Sept</option>\n");
      out.write("\t\t\t\t<option value=\"10\"  >Oct</option>\n");
      out.write("\t\t\t\t<option value=\"11\">Nov</option>\n");
      out.write("\t\t\t\t<option value=\"12\">Dec</option>\n");
      out.write("\n");
      out.write("\t\t\t</select> Year<select id=\"year\">\n");
      out.write("\n");
      out.write("\t\t\t\t<option value=\"2018\" selected=\"selected\">2018</option>\n");
      out.write("\t\t\t\t<option value=\"2019\">2019</option>\n");
      out.write("\t\t\t\t<option value=\"2020\">2020</option>\n");
      out.write("\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<div class=\"form-control col-md-4\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\tSample No <input type=\"text\" id=\"sampleNo\"\n");
      out.write("\t\t\t\tclass=\"form-control input-sm\" />\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"form-control col-md-4\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t<label class=\"switch\"> Published");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t <span class=\"slider\"></span>\n");
      out.write("\t\t\t</label>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t <label class=\"switch\"> Approved by AEE");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t <span class=\"slider\"></span>\n");
      out.write("\t\t\t</label>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t <label class=\"switch\"> Rejected");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f5(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t <span class=\"slider\"></span>\n");
      out.write("\t\t\t</label>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\n");
      out.write("\t\t<input type=\"button\" onclick=\"applyFilters()\" value=\"Apply Filters\"\n");
      out.write("\t\t\tclass=\"btn btn-primary btn-sm\" /> <a\n");
      out.write("\t\t\tclass=\"btn btn-light btn-sm float-right\"\n");
      out.write("\t\t\thref=\"javascript:window.location='listOilReport'\"><span\n");
      out.write("\t\t\tclass=\"glyphicon glyphicon-plus\"></span>Clear Filters</a>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/filterOilReports.jsp(156,35) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${finalReport}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" <input type=\"checkbox\"\n");
          out.write("\t\t\t\tid=\"finalReport\" checked=\"checked\">");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/filterOilReports.jsp(159,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not finalReport}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" <input type=\"checkbox\"\n");
          out.write("\t\t\t\tid=\"finalReport\" >");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/filterOilReports.jsp(165,42) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${aeeApproval}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<input type=\"checkbox\"\n");
          out.write("\t\t\t\tid=\"aeeApproval\" checked=\"checked\"> ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/filterOilReports.jsp(166,47) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not aeeApproval}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<input type=\"checkbox\"\n");
          out.write("\t\t\t\tid=\"aeeApproval\" > ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /WEB-INF/views/filterOilReports.jsp(171,35) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rejectedReport}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<input type=\"checkbox\"\n");
          out.write("\t\t\t\tid=\"rejectedReport\" checked=\"checked\">");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f5 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f5_reused = false;
    try {
      _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f5.setParent(null);
      // /WEB-INF/views/filterOilReports.jsp(173,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not rejectedReport}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
      if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<input type=\"checkbox\"\n");
          out.write("\t\t\t\tid=\"rejectedReport\" >");
          int evalDoAfterBody = _jspx_th_c_005fif_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f5);
      _jspx_th_c_005fif_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f5_reused);
    }
    return false;
  }
}
